<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>프로그래머스 on 1 Day 1 Problem</title>
    <link>https://jyukki97.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/</link>
    <description>Recent content in 프로그래머스 on 1 Day 1 Problem</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr-ko</language>
    <lastBuildDate>Wed, 05 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jyukki97.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[프로그래머스]야근 지수</title>
      <link>https://jyukki97.github.io/blog/2020-02-05-overtimeindex/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-02-05-overtimeindex/</guid>
      <description>https://programmers.co.kr
문제: 회사원 Demi는 가끔은 야근을 하는데요, 야근을 하면 야근 피로도가 쌓입니다. 야근 피로도는 야근을 시작한 시점에서 남은 일의 작업량을 제곱하여 더한 값입니다. Demi는 N시간 동안 야근 피로도를 최소화하도록 일할 겁니다.Demi가 1시간 동안 작업량 1만큼을 처리할 수 있다고 할 때, 퇴근까지 남은 N 시간과 각 일에 대한 작업량 works에 대해 야근 피로도를 최소화한 값을 리턴하는 함수 solution을 완성해주세요.
풀이: 작업량 works에 들어있는 값 중 최댓값에서 1을 빼는 작업을 퇴근 까지 남은 시간인 N시간 만큼 반복한다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]멀리 뛰기</title>
      <link>https://jyukki97.github.io/blog/2020-02-04-longjump/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-02-04-longjump/</guid>
      <description>https://programmers.co.kr
문제: 효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는 (1칸, 1칸, 1칸, 1칸) (1칸, 2칸, 1칸) (1칸, 1칸, 2칸) (2칸, 1칸, 1칸) (2칸, 2칸) 의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다. 멀리뛰기에 사용될 칸의 수 n이 주어질 때, 효진이가 끝에 도달하는 방법이 몇 가지인지 알아내, 여기에 1234567를 나눈 나머지를 리턴하는 함수, solution을 완성하세요. 예를 들어 4가 입력된다면, 5를 return하면 됩니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]다음 큰 숫자</title>
      <link>https://jyukki97.github.io/blog/2020-02-03-nextbignum/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-02-03-nextbignum/</guid>
      <description>https://programmers.co.kr
문제: 자연수 n이 주어졌을 때, n의 다음 큰 숫자는 다음과 같이 정의 합니다.
 조건 1. n의 다음 큰 숫자는 n보다 큰 자연수 입니다. 조건 2. n의 다음 큰 숫자와 n은 2진수로 변환했을 때 1의 갯수가 같습니다. 조건 3. n의 다음 큰 숫자는 조건 1, 2를 만족하는 수 중 가장 작은 수 입니다.  예를 들어서 78(1001110)의 다음 큰 숫자는 83(1010011)입니다.
자연수 n이 매개변수로 주어질 때, n의 다음 큰 숫자를 return 하는 solution 함수를 완성해주세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]줄 서는 방법</title>
      <link>https://jyukki97.github.io/blog/2020-02-02-howtolineup/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-02-02-howtolineup/</guid>
      <description>https://programmers.co.kr
문제: n명의 사람이 일렬로 줄을 서고 있습니다. n명의 사람들에게는 각각 1번부터 n번까지 번호가 매겨져 있습니다. n명이 사람을 줄을 서는 방법은 여러가지 방법이 있습니다. 예를 들어서 3명의 사람이 있다면 다음과 같이 6개의 방법이 있습니다.
 [1, 2, 3] [1, 3, 2] [2, 1, 3] [2, 3, 1] [3, 1, 2] [3, 2, 1]  사람의 수 n과, 자연수 k가 주어질 때, 사람을 나열 하는 방법을 사전 순으로 나열 했을 때, k번째 방법을 return하는 solution 함수를 완성해주세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]가장 큰 수</title>
      <link>https://jyukki97.github.io/blog/2020-02-01-biggestnum/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-02-01-biggestnum/</guid>
      <description>https://programmers.co.kr
문제: 0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.
예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.
0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, 순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return 하도록 solution 함수를 작성해주세요.
풀이: int 배열을 string으로 바꿔서 정렬한다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]소수 찾기</title>
      <link>https://jyukki97.github.io/blog/2020-01-31-findprimnum/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-31-findprimnum/</guid>
      <description>https://programmers.co.kr
문제: 한자리 숫자가 적힌 종이 조각이 흩어져있습니다. 흩어진 종이 조각을 붙여 소수를 몇 개 만들 수 있는지 알아내려 합니다.
각 종이 조각에 적힌 숫자가 적힌 문자열 numbers가 주어졌을 때, 종이 조각으로 만들 수 있는 소수가 몇 개인지 return 하도록 solution 함수를 완성해주세요.
풀이: 문자열 numbers로 만들 수 있는 모든 순열을 set에 넣는다. (중복된 숫자를 거르기 위함)
set에 들어있는 수들을 모두 순회하여 소수라면 answer값을 +1 해준다.
(맨 처음에 sort를 하지않을 경우 실패가 뜨는데 왜 그런지는 잘 모르겠다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]오픈 채팅방</title>
      <link>https://jyukki97.github.io/blog/2020-01-30-openchating/</link>
      <pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-30-openchating/</guid>
      <description>https://programmers.co.kr
문제: 카카오톡 오픈채팅방에서는 친구가 아닌 사람들과 대화를 할 수 있는데, 본래 닉네임이 아닌 가상의 닉네임을 사용하여 채팅방에 들어갈 수 있다.
신입사원인 김크루는 카카오톡 오픈 채팅방을 개설한 사람을 위해, 다양한 사람들이 들어오고, 나가는 것을 지켜볼 수 있는 관리자창을 만들기로 했다. 채팅방에 누군가 들어오면 다음 메시지가 출력된다.
[닉네임]님이 들어왔습니다.
채팅방에서 누군가 나가면 다음 메시지가 출력된다.
[닉네임]님이 나갔습니다.
채팅방에서 닉네임을 변경하는 방법은 다음과 같이 두 가지이다.
 채팅방을 나간 후, 새로운 닉네임으로 다시 들어간다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]소수 만들기</title>
      <link>https://jyukki97.github.io/blog/2020-01-29-makeprimenum/</link>
      <pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-29-makeprimenum/</guid>
      <description>https://programmers.co.kr
문제: 주어진 숫자 중 3개의 수를 더했을 때 소수가 되는 경우의 개수를 구하려고 합니다. 숫자들이 들어있는 배열 nums가 매개변수로 주어질 때, nums에 있는 숫자들 중 서로 다른 3개를 골라 더했을 때 소수가 되는 경우의 개수를 return 하도록 solution 함수를 완성해주세요.
풀이: 3개의 숫자를 더한 값이 소수인지 아닌지 판별 후 소수라면 answer을 +1 해준다.
코드: 사용언어 : c++
#include &amp;lt;vector&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;math.h&amp;gt;using namespace std;int solution(vector&amp;lt;int&amp;gt; nums) {int answer = 0;for(int i = 0;i &amp;lt; nums.</description>
    </item>
    
    <item>
      <title>[프로그래머스]행렬의 곱셈</title>
      <link>https://jyukki97.github.io/blog/2020-01-28-matrixmultiplication/</link>
      <pubDate>Tue, 28 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-28-matrixmultiplication/</guid>
      <description>https://programmers.co.kr
문제: 2차원 행렬 arr1과 arr2를 입력받아, arr1에 arr2를 곱한 결과를 반환하는 함수, solution을 완성해주세요.
풀이: arr1의 가로행과 arr2의 세로열의 값들을 각각 곱한것을 더한 값을 a에 저장한다.
저장된 배열 a를 answer에 푸쉬 한다.
코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; solution(vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; arr1, vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; arr2) {vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; answer;for (int i = 0; i &amp;lt; arr1.size(); i++){vector&amp;lt;int&amp;gt;a;for (int t = 0; t &amp;lt; arr2[0].</description>
    </item>
    
    <item>
      <title>[프로그래머스]라면공장</title>
      <link>https://jyukki97.github.io/blog/2020-01-27-ramenfactory/</link>
      <pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-27-ramenfactory/</guid>
      <description>https://programmers.co.kr
문제: 라면 공장에서는 하루에 밀가루를 1톤씩 사용합니다. 원래 밀가루를 공급받던 공장의 고장으로 앞으로 k일 이후에야 밀가루를 공급받을 수 있기 때문에 해외 공장에서 밀가루를 수입해야 합니다.
해외 공장에서는 향후 밀가루를 공급할 수 있는 날짜와 수량을 알려주었고, 라면 공장에서는 운송비를 줄이기 위해 최소한의 횟수로 밀가루를 공급받고 싶습니다.
현재 공장에 남아있는 밀가루 수량 stock, 밀가루 공급 일정(dates)과 해당 시점에 공급 가능한 밀가루 수량(supplies), 원래 공장으로부터 공급받을 수 있는 시점 k가 주어질 때, 밀가루가 떨어지지 않고 공장을 운영하기 위해서 최소한 몇 번 해외 공장으로부터 밀가루를 공급받아야 하는지를 return 하도록 solution 함수를 완성하세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]제일 작은 수 제거하기</title>
      <link>https://jyukki97.github.io/blog/2020-01-26-removeminnum/</link>
      <pubDate>Sun, 26 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-26-removeminnum/</guid>
      <description>https://programmers.co.kr
문제: 정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요. 단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요. 예를들어 arr이 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10]면 [-1]을 리턴 합니다.
풀이: arr에서 제일 작은 수를 찾아 삭제한다.
만약 arr이 비었다면 -1을 넣는다.
코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;vector&amp;lt;int&amp;gt; solution(vector&amp;lt;int&amp;gt; arr) {int min = arr[0], c = 0;for(int i = 1; i &amp;lt; arr.</description>
    </item>
    
    <item>
      <title>[프로그래머스]직사각형 별찍기</title>
      <link>https://jyukki97.github.io/blog/2020-01-25-ractanglestar/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-25-ractanglestar/</guid>
      <description>https://programmers.co.kr
문제: 이 문제에는 표준 입력으로 두 개의 정수 n과 m이 주어집니다. 별(*) 문자를 이용해 가로의 길이가 n, 세로의 길이가 m인 직사각형 형태를 출력해보세요.
풀이: n번 별을 찍는다. 개행한다.
그것을 m번 반복한다.
코드: 사용언어 : c++
#include &amp;lt;iostream&amp;gt;using namespace std;int main(void) {int a, b;cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b;for (int i = 0; i &amp;lt; b; i++){for (int t = 0; t &amp;lt; a; t++){cout &amp;lt;&amp;lt; &amp;#39;*&amp;#39;;} cout &amp;lt;&amp;lt; endl;}return 0;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]정수 내림차순으로 배치하기</title>
      <link>https://jyukki97.github.io/blog/2020-01-24-integersort/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-24-integersort/</guid>
      <description>https://programmers.co.kr
문제: 함수 solution은 정수 n을 매개변수로 입력받습니다. n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요. 예를들어 n이 118372면 873211을 리턴하면 됩니다.
풀이: 정수 n을 string 에 담는다.
담아진 string 을 내림차순으로 정렬한다.
string을 long long 값으로 변환후 리턴한다.
코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;long long solution(long long n) {string a = to_string(n);sort(a.begin(), a.end(), greater&amp;lt;char&amp;gt;());return stoull(a);}</description>
    </item>
    
    <item>
      <title>[프로그래머스]H-index</title>
      <link>https://jyukki97.github.io/blog/2020-01-23-h-index/</link>
      <pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-23-h-index/</guid>
      <description>https://programmers.co.kr
문제: H-Index는 과학자의 생산성과 영향력을 나타내는 지표입니다. 어느 과학자의 H-Index를 나타내는 값인 h를 구하려고 합니다. 위키백과1에 따르면, H-Index는 다음과 같이 구합니다.
어떤 과학자가 발표한 논문 n편 중, h번 이상 인용된 논문이 h편 이상이고 나머지 논문이 h번 이하 인용되었다면 h가 이 과학자의 H-Index입니다.
어떤 과학자가 발표한 논문의 인용 횟수를 담은 배열 citations가 매개변수로 주어질 때, 이 과학자의 H-Index를 return 하도록 solution 함수를 작성해주세요.
풀이: 논문 n편을 정렬한다.
1번째 논문이 1보다 크다면 H-index는 1이 된다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]행렬의 덧셈</title>
      <link>https://jyukki97.github.io/blog/2020-01-22-matrixsum/</link>
      <pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-22-matrixsum/</guid>
      <description>https://programmers.co.kr
문제: 행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다. 2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요.
풀이: 각 행렬의 같은 행 같은 열을 더한 행렬을 출력한다.
코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; solution(vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; arr1, vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; arr2) {for (int i = 0; i &amp;lt; arr1.size(); i++)for(int t = 0; t &amp;lt; arr1[i].</description>
    </item>
    
    <item>
      <title>[프로그래머스]폰켓몬</title>
      <link>https://jyukki97.github.io/blog/2020-01-21-phoneketmon/</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-21-phoneketmon/</guid>
      <description>https://programmers.co.kr
문제: 당신은 폰켓몬을 잡기 위한 오랜 여행 끝에, 홍 박사님의 연구실에 도착했습니다. 홍 박사님은 당신에게 자신의 연구실에 있는 총 N 마리의 폰켓몬 중에서 N/2마리를 가져가도 좋다고 했습니다. 홍 박사님 연구실의 폰켓몬은 종류에 따라 번호를 붙여 구분합니다. 따라서 같은 종류의 폰켓몬은 같은 번호를 가지고 있습니다. 예를 들어 연구실에 총 4마리의 폰켓몬이 있고, 각 폰켓몬의 종류 번호가 [3번, 1번, 2번, 3번]이라면 이는 3번 폰켓몬 두 마리, 1번 폰켓몬 한 마리, 2번 폰켓몬 한 마리가 있음을 나타냅니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]점프와 순간 이동</title>
      <link>https://jyukki97.github.io/blog/2020-01-20-jumpandteleport/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-20-jumpandteleport/</guid>
      <description>https://programmers.co.kr
문제: OO 연구소는 한 번에 K 칸을 앞으로 점프하거나, (현재까지 온 거리) x 2 에 해당하는 위치로 순간이동을 할 수 있는 특수한 기능을 가진 아이언 슈트를 개발하여 판매하고 있습니다. 이 아이언 슈트는 건전지로 작동되는데, 순간이동을 하면 건전지 사용량이 줄지 않지만, 앞으로 K 칸을 점프하면 K 만큼의 건전지 사용량이 듭니다. 그러므로 아이언 슈트를 착용하고 이동할 때는 순간 이동을 하는 것이 더 효율적입니다. 아이언 슈트 구매자는 아이언 슈트를 착용하고 거리가 N 만큼 떨어져 있는 장소로 가려고 합니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]더 맵게</title>
      <link>https://jyukki97.github.io/blog/2020-01-19-morespicy/</link>
      <pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-19-morespicy/</guid>
      <description>https://programmers.co.kr
문제: 매운 것을 좋아하는 Leo는 모든 음식의 스코빌 지수를 K 이상으로 만들고 싶습니다. 모든 음식의 스코빌 지수를 K 이상으로 만들기 위해 Leo는 스코빌 지수가 가장 낮은 두 개의 음식을 아래와 같이 특별한 방법으로 섞어 새로운 음식을 만듭니다.
섞은 음식의 스코빌 지수 = 가장 맵지 않은 음식의 스코빌 지수 + (두 번째로 맵지 않은 음식의 스코빌 지수 * 2)Leo는 모든 음식의 스코빌 지수가 K 이상이 될 때까지 반복하여 섞습니다. Leo가 가진 음식의 스코빌 지수를 담은 배열 scoville과 원하는 스코빌 지수 K가 주어질 때, 모든 음식의 스코빌 지수를 K 이상으로 만들기 위해 섞어야 하는 최소 횟수를 return 하도록 solution 함수를 작성해주세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]124 나라의 숫자</title>
      <link>https://jyukki97.github.io/blog/2020-01-18-numbersof124countries/</link>
      <pubDate>Sat, 18 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-18-numbersof124countries/</guid>
      <description>https://programmers.co.kr
문제: 124 나라가 있습니다. 124 나라에서는 10진법이 아닌 다음과 같은 자신들만의 규칙으로 수를 표현합니다.
 124 나라에는 자연수만 존재합니다. 124 나라에는 모든 수를 표현할 때 1, 2, 4만 사용합니다.  예를 들어서 124 나라에서 사용하는 숫자는 다음과 같이 변환됩니다.
   10진법 124 나라 10진법 124 나라     1 1 6 14   2 2 7 21   3 4 8 22   4 11 9 24   5 12 10 41    자연수 n이 매개변수로 주어질 때, n을 124 나라에서 사용하는 숫자로 바꾼 값을 return 하도록 solution 함수를 완성해 주세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]쇠막대기</title>
      <link>https://jyukki97.github.io/blog/2020-01-17-ironbar/</link>
      <pubDate>Fri, 17 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-17-ironbar/</guid>
      <description>https://programmers.co.kr
문제: 여러 개의 쇠막대기를 레이저로 절단하려고 합니다. 효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐 놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기들을 자릅니다. 쇠막대기와 레이저의 배치는 다음 조건을 만족합니다.
- 쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있습니다.- 쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓습니다.- 각 쇠막대기를 자르는 레이저는 적어도 하나 존재합니다.- 레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않습니다.아래 그림은 위 조건을 만족하는 예를 보여줍니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]탑</title>
      <link>https://jyukki97.github.io/blog/2020-01-16-tower/</link>
      <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-16-tower/</guid>
      <description>https://programmers.co.kr
문제: 수평 직선에 탑 N대를 세웠습니다. 모든 탑의 꼭대기에는 신호를 송/수신하는 장치를 설치했습니다. 발사한 신호는 신호를 보낸 탑보다 높은 탑에서만 수신합니다. 또한, 한 번 수신된 신호는 다른 탑으로 송신되지 않습니다.
예를 들어 높이가 6, 9, 5, 7, 4인 다섯 탑이 왼쪽으로 동시에 레이저 신호를 발사합니다. 그러면, 탑은 다음과 같이 신호를 주고받습니다. 높이가 4인 다섯 번째 탑에서 발사한 신호는 높이가 7인 네 번째 탑이 수신하고, 높이가 7인 네 번째 탑의 신호는 높이가 9인 두 번째 탑이, 높이가 5인 세 번째 탑의 신호도 높이가 9인 두 번째 탑이 수신합니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]저울</title>
      <link>https://jyukki97.github.io/blog/2020-01-15-scale/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-15-scale/</guid>
      <description>https://programmers.co.kr
문제: 하나의 양팔 저울을 이용하여 물건의 무게를 측정하려고 합니다. 이 저울의 양팔의 끝에는 물건이나 추를 올려놓는 접시가 달려 있고, 양팔의 길이는 같습니다. 또한, 저울의 한쪽에는 저울추들만 놓을 수 있고, 다른 쪽에는 무게를 측정하려는 물건만 올려놓을 수 있습니다.
저울추가 담긴 배열 weight가 매개변수로 주어질 때, 이 추들로 측정할 수 없는 양의 정수 무게 중 최솟값을 return 하도록 solution 함수를 작성해주세요.
예를 들어, 무게가 각각 [3, 1, 6, 2, 7, 30, 1]인 7개의 저울추를 주어졌을 때, 이 추들로 측정할 수 없는 양의 정수 무게 중 최솟값은 21입니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]문자열 내림차순으로 배치하기</title>
      <link>https://jyukki97.github.io/blog/2020-01-14-stringdescendingsort/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-14-stringdescendingsort/</guid>
      <description>https://programmers.co.kr
문제: 문자열 s에 나타나는 문자를 큰것부터 작은 순으로 정렬해 새로운 문자열을 리턴하는 함수, solution을 완성해주세요. s는 영문 대소문자로만 구성되어 있으며, 대문자는 소문자보다 작은 것으로 간주합니다.
풀이: 주어진 문자열을 내림차순으로 정렬한다.
코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;string solution(string s) {sort(s.begin(), s.end(), greater&amp;lt;char&amp;gt;());return s;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]모의고사</title>
      <link>https://jyukki97.github.io/blog/2020-01-13-mocktest/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-13-mocktest/</guid>
      <description>https://programmers.co.kr
문제: 수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.
1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, &amp;hellip; 2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, &amp;hellip; 3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, &amp;hellip;</description>
    </item>
    
    <item>
      <title>[프로그래머스]정수 삼각형</title>
      <link>https://jyukki97.github.io/blog/2020-01-12-inttriangle/</link>
      <pubDate>Sun, 12 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-12-inttriangle/</guid>
      <description>https://programmers.co.kr
문제: 위와 같은 삼각형의 꼭대기에서 바닥까지 이어지는 경로 중, 거쳐간 숫자의 합이 가장 큰 경우를 찾아보려고 합니다. 아래 칸으로 이동할 때는 대각선 방향으로 한 칸 오른쪽 또는 왼쪽으로만 이동 가능합니다. 예를 들어 3에서는 그 아래칸의 8 또는 1로만 이동이 가능합니다.
삼각형의 정보가 담긴 배열 triangle이 매개변수로 주어질 때, 거쳐간 숫자의 최댓값을 return 하도록 solution 함수를 완성하세요.
풀이: DP[i][t] : i 줄 t 위치에서의 최댓값
DP[i][t] = max(DP[i - 1][t - 1], DP[i - 1][t])</description>
    </item>
    
    <item>
      <title>[프로그래머스]타일 장식물</title>
      <link>https://jyukki97.github.io/blog/2020-01-11-tiledecoration/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-11-tiledecoration/</guid>
      <description>https://programmers.co.kr
문제: 대구 달성공원에 놀러 온 지수는 최근에 새로 만든 타일 장식물을 보게 되었다. 타일 장식물은 정사각형 타일을 붙여 만든 형태였는데, 한 변이 1인 정사각형 타일부터 시작하여 마치 앵무조개의 나선 모양처럼 점점 큰 타일을 붙인 형태였다. 타일 장식물의 일부를 그리면 다음과 같다.
그림에서 타일에 적힌 수는 각 타일의 한 변의 길이를 나타낸다. 타일 장식물을 구성하는 정사각형 타일 한 변의 길이를 안쪽 타일부터 시작하여 차례로 적으면 다음과 같다. [1, 1, 2, 3, 5, 8, .</description>
    </item>
    
    <item>
      <title>[프로그래머스]거스름돈</title>
      <link>https://jyukki97.github.io/blog/2020-01-10-change/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-10-change/</guid>
      <description>https://programmers.co.kr
문제: Finn은 편의점에서 야간 아르바이트를 하고 있습니다. 야간에 손님이 너무 없어 심심한 Finn은 손님들께 거스름돈을 n 원을 줄 때 방법의 경우의 수를 구하기로 하였습니다.
예를 들어서 손님께 5원을 거슬러 줘야 하고 1원, 2원, 5원이 있다면 다음과 같이 4가지 방법으로 5원을 거슬러 줄 수 있습니다.
 1원을 5개 사용해서 거슬러 준다. 1원을 3개 사용하고, 2원을 1개 사용해서 거슬러 준다. 1원을 1개 사용하고, 2원을 2개 사용해서 거슬러 준다. 5원을 1개 사용해서 거슬러 준다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]기지국 설치</title>
      <link>https://jyukki97.github.io/blog/2020-01-09-setupstations/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-09-setupstations/</guid>
      <description>https://programmers.co.kr
문제: N개의 아파트가 일렬로 쭉 늘어서 있습니다. 이 중에서 일부 아파트 옥상에는 4g 기지국이 설치되어 있습니다. 기술이 발전해 5g 수요가 높아져 4g 기지국을 5g 기지국으로 바꾸려 합니다. 그런데 5g 기지국은 4g 기지국보다 전달 범위가 좁아, 4g 기지국을 5g 기지국으로 바꾸면 어떤 아파트에는 전파가 도달하지 않습니다.
예를 들어 11개의 아파트가 쭉 늘어서 있고, [4, 11] 번째 아파트 옥상에는 4g 기지국이 설치되어 있습니다. 만약 이 4g 기지국이 전파 도달 거리가 1인 5g 기지국으로 바뀔 경우 모든 아파트에 전파를 전달할 수 없습니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]최고의 집합</title>
      <link>https://jyukki97.github.io/blog/2020-01-08-bestset/</link>
      <pubDate>Wed, 08 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-08-bestset/</guid>
      <description>https://programmers.co.kr
문제: 자연수 n 개로 이루어진 중복 집합(multi set, 편의상 이후에는 집합으로 통칭) 중에 다음 두 조건을 만족하는 집합을 최고의 집합이라고 합니다.
 각 원소의 합이 S가 되는 수의 집합 위 조건을 만족하면서 각 원소의 곱 이 최대가 되는 집합  예를 들어서 자연수 2개로 이루어진 집합 중 합이 9가 되는 집합은 다음과 같이 4개가 있습니다. { 1, 8 }, { 2, 7 }, { 3, 6 }, { 4, 5 } 그중 각 원소의 곱이 최대인 { 4, 5 }가 최고의 집합입니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]숫자 게임</title>
      <link>https://jyukki97.github.io/blog/2020-01-07-numgame/</link>
      <pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-07-numgame/</guid>
      <description>https://programmers.co.kr
문제: xx 회사의 2xN명의 사원들은 N명씩 두 팀으로 나눠 숫자 게임을 하려고 합니다. 두 개의 팀을 각각 A팀과 B팀이라고 하겠습니다. 숫자 게임의 규칙은 다음과 같습니다.
 먼저 모든 사원이 무작위로 자연수를 하나씩 부여받습니다. 각 사원은 딱 한 번씩 경기를 합니다. 각 경기당 A팀에서 한 사원이, B팀에서 한 사원이 나와 서로의 수를 공개합니다. 그때 숫자가 큰 쪽이 승리하게 되고, 승리한 사원이 속한 팀은 승점을 1점 얻게 됩니다. 만약 숫자가 같다면 누구도 승점을 얻지 않습니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]가장 긴 팰린드롬</title>
      <link>https://jyukki97.github.io/blog/2020-01-06-longestpalindrome/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-06-longestpalindrome/</guid>
      <description>https://programmers.co.kr
문제: 앞뒤를 뒤집어도 똑같은 문자열을 팰린드롬(palindrome)이라고 합니다. 문자열 s가 주어질 때, s의 부분문자열(Substring)중 가장 긴 팰린드롬의 길이를 return 하는 solution 함수를 완성해 주세요.
예를들면, 문자열 s가 abcdcba이면 7을 return하고 abacde이면 3을 return합니다.
풀이: Manacher&#39;s algorithm 을 이용한다.
코드: 사용언어 : c++
#include &amp;lt;iostream&amp;gt;#include &amp;lt;string&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int p[5002];int solution(string s){string a = &amp;#34;#&amp;#34;;for (char i : s) {a += i;a += &amp;#34;#&amp;#34;;}int m = 0, ed = 0, answer = 0;for (int i = 1; i &amp;lt; a.</description>
    </item>
    
    <item>
      <title>[프로그래머스]등굣길</title>
      <link>https://jyukki97.github.io/blog/2020-01-05-waytoschool/</link>
      <pubDate>Sun, 05 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-05-waytoschool/</guid>
      <description>https://programmers.co.kr
문제: 계속되는 폭우로 일부 지역이 물에 잠겼습니다. 물에 잠기지 않은 지역을 통해 학교를 가려고 합니다. 집에서 학교까지 가는 길은 m x n 크기의 격자모양으로 나타낼 수 있습니다.
아래 그림은 m = 4, n = 3 인 경우입니다.
가장 왼쪽 위, 즉 집이 있는 곳의 좌표는 (1, 1)로 나타내고 가장 오른쪽 아래, 즉 학교가 있는 곳의 좌표는 (m, n)으로 나타냅니다.
격자의 크기 m, n과 물이 잠긴 지역의 좌표를 담은 2차원 배열 puddles이 매개변수로 주어집니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]이중우선순위큐</title>
      <link>https://jyukki97.github.io/blog/2020-01-04-priorityqueue/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-04-priorityqueue/</guid>
      <description>https://programmers.co.kr
문제: 이중 우선순위 큐는 다음 연산을 할 수 있는 자료구조를 말합니다.
   명령어 수신 탑(높이)     I 숫자 큐에 주어진 숫자를 삽입합니다.   D 1 큐에서 최댓값을 삭제합니다.   D -1 큐에서 최솟값을 삭제합니다.    이중 우선순위 큐가 할 연산 operations가 매개변수로 주어질 때, 모든 연산을 처리한 후 큐가 비어있으면 [0,0] 비어있지 않으면 [최댓값, 최솟값]을 return 하도록 solution 함수를 구현해주세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]2 X n 타일링</title>
      <link>https://jyukki97.github.io/blog/2020-01-03-2xntiling/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-03-2xntiling/</guid>
      <description>https://programmers.co.kr
문제: 가로 길이가 2이고 세로의 길이가 1인 직사각형모양의 타일이 있습니다. 이 직사각형 타일을 이용하여 세로의 길이가 2이고 가로의 길이가 n인 바닥을 가득 채우려고 합니다. 타일을 채울 때는 다음과 같이 2가지 방법이 있습니다.
 타일을 가로로 배치 하는 경우 타일을 세로로 배치 하는 경우  예를들어서 n이 7인 직사각형은 다음과 같이 채울 수 있습니다.
직사각형의 가로의 길이 n이 매개변수로 주어질 때, 이 직사각형을 채우는 방법의 수를 return 하는 solution 함수를 완성해주세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]x만큼 간격이 있는 n개의 숫자</title>
      <link>https://jyukki97.github.io/blog/2020-01-03-xgapnnum/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-03-xgapnnum/</guid>
      <description>https://programmers.co.kr
문제: 함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다. 다음 제한 조건을 보고, 조건을 만족하는 함수, solution을 완성해주세요.
풀이: x * 1, x *2&amp;hellip;., x * n 을 리턴한다.
코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;vector&amp;lt;long long&amp;gt; solution(int x, int n) {vector&amp;lt;long long&amp;gt; answer;for (int i = 1;i &amp;lt;= n;i++)answer.push_back(x * i);return answer;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]네트워크</title>
      <link>https://jyukki97.github.io/blog/2020-01-03-network/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-03-network/</guid>
      <description>https://programmers.co.kr
문제: 네트워크란 컴퓨터 상호 간에 정보를 교환할 수 있도록 연결된 형태를 의미합니다. 예를 들어, 컴퓨터 A와 컴퓨터 B가 직접적으로 연결되어있고, 컴퓨터 B와 컴퓨터 C가 직접적으로 연결되어 있을 때 컴퓨터 A와 컴퓨터 C도 간접적으로 연결되어 정보를 교환할 수 있습니다. 따라서 컴퓨터 A, B, C는 모두 같은 네트워크 상에 있다고 할 수 있습니다.
컴퓨터의 개수 n, 연결에 대한 정보가 담긴 2차원 배열 computers가 매개변수로 주어질 때, 네트워크의 개수를 return 하도록 solution 함수를 작성하시오.</description>
    </item>
    
    <item>
      <title>[프로그래머스]비밀지도</title>
      <link>https://jyukki97.github.io/blog/2020-01-03-secretmap/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-03-secretmap/</guid>
      <description>https://programmers.co.kr
문제: 비밀지도 네오는 평소 프로도가 비상금을 숨겨놓는 장소를 알려줄 비밀지도를 손에 넣었다. 그런데 이 비밀지도는 숫자로 암호화되어 있어 위치를 확인하기 위해서는 암호를 해독해야 한다. 다행히 지도 암호를 해독할 방법을 적어놓은 메모도 함께 발견했다.
 지도는 한 변의 길이가 n인 정사각형 배열 형태로, 각 칸은 공백(&amp;rdquo; ) 또는벽(#&amp;quot;) 두 종류로 이루어져 있다. 전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다. 각각 지도 1과 지도 2라고 하자. 지도 1 또는 지도 2 중 어느 하나라도 벽인 부분은 전체 지도에서도 벽이다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]실패율</title>
      <link>https://jyukki97.github.io/blog/2020-01-03-failurelate/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-03-failurelate/</guid>
      <description>https://programmers.co.kr
문제: 실패율 슈퍼 게임 개발자 오렐리는 큰 고민에 빠졌다. 그녀가 만든 프랜즈 오천성이 대성공을 거뒀지만, 요즘 신규 사용자의 수가 급감한 것이다. 원인은 신규 사용자와 기존 사용자 사이에 스테이지 차이가 너무 큰 것이 문제였다.
이 문제를 어떻게 할까 고민 한 그녀는 동적으로 게임 시간을 늘려서 난이도를 조절하기로 했다. 역시 슈퍼 개발자라 대부분의 로직은 쉽게 구현했지만, 실패율을 구하는 부분에서 위기에 빠지고 말았다. 오렐리를 위해 실패율을 구하는 코드를 완성하라.
 실패율은 다음과 같이 정의한다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]예산</title>
      <link>https://jyukki97.github.io/blog/2020-01-03-budget/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-03-budget/</guid>
      <description>https://programmers.co.kr
문제: S사에서는 각 부서에 필요한 물품을 지원해 주기 위해 부서별로 물품을 구매하는데 필요한 금액을 조사했습니다. 그러나, 전체 예산이 정해져 있기 때문에 모든 부서의 물품을 구매해 줄 수는 없습니다. 그래서 최대한 많은 부서의 물품을 구매해 줄 수 있도록 하려고 합니다.
물품을 구매해 줄 때는 각 부서가 신청한 금액만큼을 모두 지원해 줘야 합니다. 예를 들어 1,000원을 신청한 부서에는 정확히 1,000원을 지원해야 하며, 1,000원보다 적은 금액을 지원해 줄 수는 없습니다.
부서별로 신청한 금액이 들어있는 배열 d와 예산 budget이 매개변수로 주어질 때, 최대 몇 개의 부서에 물품을 지원할 수 있는지 return 하도록 solution 함수를 완성해주세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]예산</title>
      <link>https://jyukki97.github.io/blog/2020-01-03-budget_level3/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-03-budget_level3/</guid>
      <description>https://programmers.co.kr
문제: 국가의 역할 중 하나는 여러 지방의 예산요청을 심사하여 국가의 예산을 분배하는 것입니다. 국가예산의 총액은 미리 정해져 있어서 모든 예산요청을 배정해 주기는 어려울 수도 있습니다. 그래서 정해진 총액 이하에서 가능한 한 최대의 총 예산을 다음과 같은 방법으로 배정합니다.
1. 모든 요청이 배정될 수 있는 경우에는 요청한 금액을 그대로 배정합니다.2. 모든 요청이 배정될 수 없는 경우에는 특정한 정수 상한액을 계산하여 그 이상인 예산요청에는 모두 상한액을 배정합니다. 상한액 이하의 예산요청에 대해서는 요청한 금액을 그대로 배정합니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]종이접기</title>
      <link>https://jyukki97.github.io/blog/2020-01-03-origami/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-03-origami/</guid>
      <description>https://programmers.co.kr
문제: 직사각형 종이를 n번 접으려고 합니다. 이때, 항상 오른쪽 절반을 왼쪽으로 접어 나갑니다. 다음은 n = 2인 경우의 예시입니다.
먼저 오른쪽 절반을 왼쪽으로 접습니다.
다시 오른쪽 절반을 왼쪽으로 접습니다.
종이를 모두 접은 후에는 종이를 전부 펼칩니다. 종이를 펼칠 때는 종이를 접은 방법의 역순으로 펼쳐서 처음 놓여있던 때와 같은 상태가 되도록 합니다. 위와 같이 두 번 접은 후 종이를 펼치면 아래 그림과 같이 종이에 접은 흔적이 생기게 됩니다.
위 그림에서 ∨ 모양이 생긴 부분은 점선(0)으로, ∧ 모양이 생긴 부분은 실선(1)으로 표시했습니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]JadenCase 문자열 만들기</title>
      <link>https://jyukki97.github.io/blog/2020-01-02-jadencasestring/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-02-jadencasestring/</guid>
      <description>https://programmers.co.kr
문제: JadenCase란 모든 단어의 첫 문자가 대문자이고, 그 외의 알파벳은 소문자인 문자열입니다. 문자열 s가 주어졌을 때, s를 JadenCase로 바꾼 문자열을 리턴하는 함수, solution을 완성해주세요.
풀이: [C++]대소문자, 숫자 구분함수  참고
모든 단어의 첫 문자가 대문자가 아니라면 대문자로 바꾼다.
첫 문자가 아니라면 소문자로 바꾼다.
코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;string solution(string s) {int c = 0;for (int i = 0;i &amp;lt; s.</description>
    </item>
    
    <item>
      <title>[프로그래머스]뉴스 클러스터링</title>
      <link>https://jyukki97.github.io/blog/2020-01-02-newsclustering/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-02-newsclustering/</guid>
      <description>https://programmers.co.kr
문제: 뉴스 클러스터링 여러 언론사에서 쏟아지는 뉴스, 특히 속보성 뉴스를 보면 비슷비슷한 제목의 기사가 많아 정작 필요한 기사를 찾기가 어렵다. Daum 뉴스의 개발 업무를 맡게 된 신입사원 튜브는 사용자들이 편리하게 다양한 뉴스를 찾아볼 수 있도록 문제점을 개선하는 업무를 맡게 되었다.
개발의 방향을 잡기 위해 튜브는 우선 최근 화제가 되고 있는 카카오 신입 개발자 공채 관련 기사를 검색해보았다.
 카카오 첫 공채..&amp;lsquo;블라인드&amp;rsquo; 방식 채용 카카오, 합병 후 첫 공채.. 블라인드 전형으로 개발자 채용 카카오, 블라인드 전형으로 신입 개발자 공채 카카오 공채, 신입 개발자 코딩 능력만 본다 카카오, 신입 공채.</description>
    </item>
    
    <item>
      <title>[프로그래머스]영어 끝말잇기</title>
      <link>https://jyukki97.github.io/blog/2020-01-02-engwordchain/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-02-engwordchain/</guid>
      <description>https://programmers.co.kr
문제: 1부터 n까지 번호가 붙어있는 n명의 사람이 영어 끝말잇기를 하고 있습니다. 영어 끝말잇기는 다음과 같은 규칙으로 진행됩니다.
 1번부터 번호 순서대로 한 사람씩 차례대로 단어를 말합니다. 마지막 사람이 단어를 말한 다음에는 다시 1번부터 시작합니다. 앞사람이 말한 단어의 마지막 문자로 시작하는 단어를 말해야 합니다. 이전에 등장했던 단어는 사용할 수 없습니다. 한 글자인 단어는 인정되지 않습니다.  다음은 3명이 끝말잇기를 하는 상황을 나타냅니다.
tank → kick → know → wheel → land → dream → mother → robot → tank</description>
    </item>
    
    <item>
      <title>[프로그래머스]정수 제곱근 판별</title>
      <link>https://jyukki97.github.io/blog/2020-01-02-distinguishsqrt/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-02-distinguishsqrt/</guid>
      <description>https://programmers.co.kr
문제: 임의의 양의 정수 n에 대해, n이 어떤 양의 정수 x의 제곱인지 아닌지 판단하려 합니다. n이 양의 정수 x의 제곱이라면 x+1의 제곱을 리턴하고, n이 양의 정수 x의 제곱이 아니라면 -1을 리턴하는 함수를 완성하세요.
풀이: 정수 n의 제곱근의 소수점을 버린 수를 a라 할때,
a * a 이 n 과 다르다면 n은 제곱근이 아니므로 -1 을 리턴, 같다면 (a + 1) * (a + 1) 을 리턴해준다.
코드: 사용언어 : c++</description>
    </item>
    
    <item>
      <title>[프로그래머스]짝수와 홀수</title>
      <link>https://jyukki97.github.io/blog/2020-01-02-oddandeven/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-02-oddandeven/</guid>
      <description>https://programmers.co.kr
문제: 정수 num이 짝수일 경우 Even을 반환하고 홀수인 경우 Odd를 반환하는 함수, solution을 완성해주세요.
풀이: 정수 num이 짝수면 &amp;ldquo;Even&amp;rdquo; 을 홀수라면 &amp;ldquo;Odd&amp;rdquo; 를 반환한다.
코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;string solution(int num) {return num % 2 ? &amp;#34;Odd&amp;#34; : &amp;#34;Even&amp;#34;;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]콜라츠 추측</title>
      <link>https://jyukki97.github.io/blog/2020-01-02-collatzconjecture/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-02-collatzconjecture/</guid>
      <description>https://programmers.co.kr
문제: 1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 작업은 다음과 같습니다.
1-1. 입력된 수가 짝수라면 2로 나눕니다. 1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다.2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 되어 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야하는지 반환하는 함수, solution을 완성해 주세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]평균 구하기</title>
      <link>https://jyukki97.github.io/blog/2020-01-02-average/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-02-average/</guid>
      <description>https://programmers.co.kr
문제: 정수를 담고 있는 배열 arr의 평균값을 return하는 함수, solution을 완성해보세요.
풀이: 배열 arr의 평균값을 리턴한다.
코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;double solution(vector&amp;lt;int&amp;gt; arr) {double answer = 0;for(int i : arr)answer += i;return answer / arr.size();}</description>
    </item>
    
    <item>
      <title>[프로그래머스]프렌즈4블록</title>
      <link>https://jyukki97.github.io/blog/2020-01-02-friends4block/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-02-friends4block/</guid>
      <description>https://programmers.co.kr
문제: 프렌즈4블록 블라인드 공채를 통과한 신입 사원 라이언은 신규 게임 개발 업무를 맡게 되었다. 이번에 출시할 게임 제목은 프렌즈4블록. 같은 모양의 카카오프렌즈 블록이 2×2 형태로 4개가 붙어있을 경우 사라지면서 점수를 얻는 게임이다.
만약 판이 위와 같이 주어질 경우, 라이언이 2×2로 배치된 7개 블록과 콘이 2×2로 배치된 4개 블록이 지워진다. 같은 블록은 여러 2×2에 포함될 수 있으며, 지워지는 조건에 만족하는 2×2 모양이 여러 개 있다면 한꺼번에 지워진다.
블록이 지워진 후에 위에 있는 블록이 아래로 떨어져 빈 공간을 채우게 된다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]하샤드 수</title>
      <link>https://jyukki97.github.io/blog/2020-01-02-harshadnum/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-02-harshadnum/</guid>
      <description>https://programmers.co.kr
문제: 양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요.
풀이: 정수 x의 각 자릿수의 합을 구한다.
정수 x를 구한 값으로 나누어 나머지가 0이라면 true를 0이 아니라면 false를 출력한다.
코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;bool solution(int x) {int c = 0;string a = to_string(x);for(char i : a)c += i - &amp;#39;0&amp;#39;;return !</description>
    </item>
    
    <item>
      <title>[프로그래머스]핸드폰 번호 가리기</title>
      <link>https://jyukki97.github.io/blog/2020-01-02-maskingphonenum/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-02-maskingphonenum/</guid>
      <description>https://programmers.co.kr
문제: 프로그래머스 모바일은 개인정보 보호를 위해 고지서를 보낼 때 고객들의 전화번호의 일부를 가립니다. 전화번호가 문자열 phone_number로 주어졌을 때, 전화번호의 뒷 4자리를 제외한 나머지 숫자를 전부 *으로 가린 문자열을 리턴하는 함수, solution을 완성해주세요.
풀이: 문자열 phone_number 의 뒤에 4자리를 제외한 나머지 숫자를 전부 &amp;lsquo;*&amp;rsquo; 로 바꾼 후 리턴한다.
코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;string solution(string phone_number) {for (int i = 0;i &amp;lt; phone_number.</description>
    </item>
    
    <item>
      <title>[프로그래머스]땅따먹기</title>
      <link>https://jyukki97.github.io/blog/2020-01-01-ttangttameokgi/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-01-ttangttameokgi/</guid>
      <description>https://programmers.co.kr
문제: 땅따먹기 게임을 하려고 합니다. 땅따먹기 게임의 땅(land)은 총 N행 4열로 이루어져 있고, 모든 칸에는 점수가 쓰여 있습니다. 1행부터 땅을 밟으며 한 행씩 내려올 때, 각 행의 4칸 중 한 칸만 밟으면서 내려와야 합니다. 단, 땅따먹기 게임에는 한 행씩 내려올 때, 같은 열을 연속해서 밟을 수 없는 특수 규칙이 있습니다.
예를 들면,
| 1 | 2 | 3 | 5 |
| 5 | 6 | 7 | 8 |</description>
    </item>
    
    <item>
      <title>[프로그래머스]숫자의 표현</title>
      <link>https://jyukki97.github.io/blog/2020-01-01-numexpression/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-01-numexpression/</guid>
      <description>https://programmers.co.kr
문제: Finn은 요즘 수학공부에 빠져 있습니다. 수학 공부를 하던 Finn은 자연수 n을 연속한 자연수들로 표현 하는 방법이 여러개라는 사실을 알게 되었습니다. 예를들어 15는 다음과 같이 4가지로 표현 할 수 있습니다.
 1 + 2 + 3 + 4 + 5 = 15 4 + 5 + 6 = 15 7 + 8 = 15 15 = 15  자연수 n이 매개변수로 주어질 때, 연속된 자연수들로 n을 표현하는 방법의 수를 return하는 solution를 완성해주세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]짝지어 제거하기</title>
      <link>https://jyukki97.github.io/blog/2020-01-01-removemating/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2020-01-01-removemating/</guid>
      <description>https://programmers.co.kr
문제: 짝지어 제거하기는, 알파벳 소문자로 이루어진 문자열을 가지고 시작합니다. 먼저 문자열에서 같은 알파벳이 2개 붙어 있는 짝을 찾습니다. 그다음, 그 둘을 제거한 뒤, 앞뒤로 문자열을 이어 붙입니다. 이 과정을 반복해서 문자열을 모두 제거한다면 짝지어 제거하기가 종료됩니다. 문자열 S가 주어졌을 때, 짝지어 제거하기를 성공적으로 수행할 수 있는지 반환하는 함수를 완성해 주세요. 성공적으로 수행할 수 있으면 1을, 아닐 경우 0을 리턴해주면 됩니다.
예를 들어, 문자열 S = baabaa 라면
b aa baa → bb aa → aa →</description>
    </item>
    
    <item>
      <title>[프로그래머스]N개의 최소공배수</title>
      <link>https://jyukki97.github.io/blog/2019-12-31-nlcm/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-31-nlcm/</guid>
      <description>https://programmers.co.kr
문제: 두 수의 최소공배수(Least Common Multiple)란 입력된 두 수의 배수 중 공통이 되는 가장 작은 숫자를 의미합니다. 예를 들어 2와 7의 최소공배수는 14가 됩니다. 정의를 확장해서, n개의 수의 최소공배수는 n 개의 수들의 배수 중 공통이 되는 가장 작은 숫자가 됩니다. n개의 숫자를 담은 배열 arr이 입력되었을 때 이 수들의 최소공배수를 반환하는 함수, solution을 완성해 주세요.
풀이: 최소공배수를 answer이라 할때,
answer과 arr를 차례대로 최소공배수를 구해 anwer에 값에 넣는다.
코드: 사용언어 : c++</description>
    </item>
    
    <item>
      <title>[프로그래머스]최대공약수와 최소공배수</title>
      <link>https://jyukki97.github.io/blog/2019-12-31-gcdandlcm/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-31-gcdandlcm/</guid>
      <description>https://programmers.co.kr
문제: 두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.
풀이: 최대공약수를 구한다.
최소공배수는 두 수에 곱에서 최대공약수를 나눈 값이 된다.
코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;vector&amp;lt;int&amp;gt; solution(int n, int m) {vector&amp;lt;int&amp;gt; answer;int a = n &amp;gt; m ?</description>
    </item>
    
    <item>
      <title>[프로그래머스]최댓값과 최솟값</title>
      <link>https://jyukki97.github.io/blog/2019-12-31-maximumandminimum/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-31-maximumandminimum/</guid>
      <description>https://programmers.co.kr
문제: 문자열 s에는 공백으로 구분된 숫자들이 저장되어 있습니다. str에 나타나는 숫자 중 최소값과 최대값을 찾아 이를 (최소값) (최대값)형태의 문자열을 반환하는 함수, solution을 완성하세요. 예를들어 s가 1 2 3 4라면 1 4를 리턴하고, -1 -2 -3 -4라면 -4 -1을 리턴하면 됩니다.
풀이: 공백 문자로 구분된 문자열을 배열안에 구분해서 넣는다.
나눠진 배열을 int 형으로 정렬한다. (string 형으로 정렬할 경우 사전순으로 정렬되기 때문에 안된다.)
배열에 맨 처음값과 마지막값을 리턴해준다.
코드: 사용언어 : c++</description>
    </item>
    
    <item>
      <title>[프로그래머스]최솟값 만들기</title>
      <link>https://jyukki97.github.io/blog/2019-12-31-makeminimum/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-31-makeminimum/</guid>
      <description>https://programmers.co.kr
문제: 길이가 같은 배열 A, B 두개가 있습니다. 각 배열은 자연수로 이루어져 있습니다. 배열 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱합니다. 이러한 과정을 배열의 길이만큼 반복하며, 두 수를 곱한 값을 누적하여 더합니다. 이때 최종적으로 누적된 값이 최소가 되도록 만드는 것이 목표입니다. (단, 각 배열에서 k번째 숫자를 뽑았다면 다음에 k번째 숫자는 다시 뽑을 수 없습니다.)
예를 들어 A = [1, 4, 2] , B = [5, 4, 4] 라면</description>
    </item>
    
    <item>
      <title>[프로그래머스]피보나치 수</title>
      <link>https://jyukki97.github.io/blog/2019-12-31-fibonaccinum/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-31-fibonaccinum/</guid>
      <description>https://programmers.co.kr
문제: 피보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여 F(n) = F(n-1) + F(n-2) 가 적용되는 수 입니다.
예를들어
 F(2) = F(0) + F(1) = 0 + 1 = 1 F(3) = F(1) + F(2) = 1 + 1 = 2 F(4) = F(2) + F(3) = 1 + 2 = 3 F(5) = F(3) + F(4) = 2 + 3 = 5  와 같이 이어집니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]가장 큰 정사각형 찾기</title>
      <link>https://jyukki97.github.io/blog/2019-12-30-findbigestractangle/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-30-findbigestractangle/</guid>
      <description>https://programmers.co.kr
문제: 1와 0로 채워진 표(board)가 있습니다. 표 1칸은 1 x 1 의 정사각형으로 이루어져 있습니다. 표에서 1로 이루어진 가장 큰 정사각형을 찾아 넓이를 return 하는 solution 함수를 완성해 주세요. (단, 정사각형이란 축에 평행한 정사각형을 말합니다.)
예를 들어
   1 2 3 4     0 1 1 1   1 1 1 1   1 1 1 1   0 0 1 0    가 있다면 가장 큰 정사각형은</description>
    </item>
    
    <item>
      <title>[프로그래머스]올바른 괄호</title>
      <link>https://jyukki97.github.io/blog/2019-12-30-correctpare/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-30-correctpare/</guid>
      <description>https://programmers.co.kr
문제: 괄호가 바르게 짝지어졌다는 것은 &amp;lsquo;(&amp;rsquo; 문자로 열렸으면 반드시 짝지어서 &amp;lsquo;)&amp;rsquo; 문자로 닫혀야 한다는 뜻입니다. 예를 들어
 ()() 또는 (())() 는 올바른 괄호입니다. )()( 또는 (()( 는 올바르지 않은 괄호입니다.  &amp;lsquo;(&amp;rsquo; 또는 &amp;lsquo;)&amp;rsquo; 로만 이루어진 문자열 s가 주어졌을 때, 문자열 s가 올바른 괄호이면 true를 return 하고, 올바르지 않은 괄호이면 false를 return 하는 solution 함수를 완성해 주세요.
풀이: 스택이 비었거나 &amp;lsquo;(&amp;rsquo; 가 나온다면 스택에 push()
둘 다 아니면서 스택에 맨 위값이 &amp;lsquo;(&amp;rsquo; 라면 pop()</description>
    </item>
    
    <item>
      <title>[프로그래머스]카펫</title>
      <link>https://jyukki97.github.io/blog/2019-12-30-carpet/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-30-carpet/</guid>
      <description>https://programmers.co.kr
문제: Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 빨간색으로 칠해져 있고 모서리는 갈색으로 칠해져 있는 격자 모양 카펫을 봤습니다.
Leo는 집으로 돌아와서 아까 본 카펫의 빨간색과 갈색으로 색칠된 격자의 개수는 기억했지만, 전체 카펫의 크기는 기억하지 못했습니다.
Leo가 본 카펫에서 갈색 격자의 수 brown, 빨간색 격자의 수 red가 매개변수로 주어질 때 카펫의 가로, 세로 크기를 순서대로 배열에 담아 return 하도록 solution 함수를 작성해주세요.
풀이: 완전탐색 brown + red 인 사각형을 만족하는 모든 가로 * 세로 중에서 red를 만족하는 가로, 세로값을 찾는다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]타겟 넘버</title>
      <link>https://jyukki97.github.io/blog/2019-12-30-targetnum/</link>
      <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-30-targetnum/</guid>
      <description>https://programmers.co.kr
문제: n개의 음이 아닌 정수가 있습니다. 이 수를 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 예를 들어 [1, 1, 1, 1, 1]로 숫자 3을 만들려면 다음 다섯 방법을 쓸 수 있습니다.
-1+1+1+1+1 = 3+1-1+1+1+1 = 3+1+1-1+1+1 = 3+1+1+1-1+1 = 3+1+1+1+1-1 = 3사용할 수 있는 숫자가 담긴 배열 numbers, 타겟 넘버 target이 매개변수로 주어질 때 숫자를 적절히 더하고 빼서 타겟 넘버를 만드는 방법의 수를 return 하도록 solution 함수를 작성해주세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]숫자 야구</title>
      <link>https://jyukki97.github.io/blog/2019-12-29-numbaseball/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-29-numbaseball/</guid>
      <description>https://programmers.co.kr
문제: 숫자 야구 게임이란 2명이 서로가 생각한 숫자를 맞추는 게임입니다. 게임해보기
각자 서로 다른 1~9까지 3자리 임의의 숫자를 정한 뒤 서로에게 3자리의 숫자를 불러서 결과를 확인합니다. 그리고 그 결과를 토대로 상대가 정한 숫자를 예상한 뒤 맞힙니다.
* 숫자는 맞지만, 위치가 틀렸을 때는 볼* 숫자와 위치가 모두 맞을 때는 스트라이크* 숫자와 위치가 모두 틀렸을 때는 아웃예를 들어, 아래의 경우가 있으면
A : 123B : 1스트라이크 1볼.A : 356B : 1스트라이크 0볼.</description>
    </item>
    
    <item>
      <title>[프로그래머스]위장</title>
      <link>https://jyukki97.github.io/blog/2019-12-29-camouflage/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-29-camouflage/</guid>
      <description>https://programmers.co.kr
문제: 스파이들은 매일 다른 옷을 조합하여 입어 자신을 위장합니다.
예를 들어 스파이가 가진 옷이 아래와 같고 오늘 스파이가 동그란 안경, 긴 코트, 파란색 티셔츠를 입었다면 다음날은 청바지를 추가로 입거나 동그란 안경 대신 검정 선글라스를 착용하거나 해야 합니다.
   종류 이름     얼굴 동그란 안경, 검정 선글라스   상의 파란색 티셔츠   하의 청바지   겉옷 긴 코트    스파이가 가진 의상들이 담긴 2차원 배열 clothes가 주어질 때 서로 다른 옷의 조합의 수를 return 하도록 solution 함수를 작성해주세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]전화번호 목록</title>
      <link>https://jyukki97.github.io/blog/2019-12-28-phonebooklist/</link>
      <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-28-phonebooklist/</guid>
      <description>https://programmers.co.kr
문제: 전화번호부에 적힌 전화번호 중, 한 번호가 다른 번호의 접두어인 경우가 있는지 확인하려 합니다. 전화번호가 다음과 같을 경우, 구조대 전화번호는 영석이의 전화번호의 접두사입니다.
 구조대 : 119 박준영 : 97 674 223 지영석 : 11 9552 4421  전화번호부에 적힌 전화번호를 담은 배열 phone_book 이 solution 함수의 매개변수로 주어질 때, 어떤 번호가 다른 번호의 접두어인 경우가 있으면 false를 그렇지 않으면 true를 return 하도록 solution 함수를 작성해주세요.
풀이: phone_book 에 있는 전화번호들을 사전순으로 정렬해 놓는다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]큰 수 만들기</title>
      <link>https://jyukki97.github.io/blog/2019-12-28-makebignum/</link>
      <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-28-makebignum/</guid>
      <description>https://programmers.co.kr
문제: 어떤 숫자에서 k개의 수를 제거했을 때 얻을 수 있는 가장 큰 숫자를 구하려 합니다.
예를 들어, 숫자 1924에서 수 두 개를 제거하면 [19, 12, 14, 92, 94, 24] 를 만들 수 있습니다. 이 중 가장 큰 숫자는 94 입니다.
문자열 형식으로 숫자 number와 제거할 수의 개수 k가 solution 함수의 매개변수로 주어집니다. number에서 k 개의 수를 제거했을 때 만들 수 있는 수 중 가장 큰 숫자를 문자열 형태로 return 하도록 solution 함수를 완성하세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]멀쩡한 사각형</title>
      <link>https://jyukki97.github.io/blog/2019-12-27-intactractangle/</link>
      <pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-27-intactractangle/</guid>
      <description>https://programmers.co.kr
문제: 가로 길이가 Wcm, 세로 길이가 Hcm인 직사각형 종이가 있습니다. 종이에는 가로, 세로 방향과 평행하게 격자 형태로 선이 그어져 있으며, 모든 격자칸은 1cm x 1cm 크기입니다. 이 종이를 격자 선을 따라 1cm × 1cm의 정사각형으로 잘라 사용할 예정이었는데, 누군가가 이 종이를 대각선 꼭지점 2개를 잇는 방향으로 잘라 놓았습니다. 그러므로 현재 직사각형 종이는 크기가 같은 직각삼각형 2개로 나누어진 상태입니다. 새로운 종이를 구할 수 없는 상태이기 때문에, 이 종이에서 원래 종이의 가로, 세로 방향과 평행하게 1cm × 1cm로 잘라 사용할 수 있는 만큼만 사용하기로 하였습니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]주식가격</title>
      <link>https://jyukki97.github.io/blog/2019-12-27-stockprice/</link>
      <pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-27-stockprice/</guid>
      <description>https://programmers.co.kr
문제: 초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요.
풀이: 초 단위로 시간을 흘러가게 한 후 주식가격이 떨어지면 그 시간을 기록하여 answer에 저장한다.
코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;vector&amp;lt;int&amp;gt; solution(vector&amp;lt;int&amp;gt; prices) {vector&amp;lt;int&amp;gt; answer;for (int i = 0;i &amp;lt; prices.size();i++) {answer.push_back(0);for (int t = i + 1;t &amp;lt; prices.</description>
    </item>
    
    <item>
      <title>[프로그래머스]프린터</title>
      <link>https://jyukki97.github.io/blog/2019-12-27-printer/</link>
      <pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-27-printer/</guid>
      <description>https://programmers.co.kr
문제: 일반적인 프린터는 인쇄 요청이 들어온 순서대로 인쇄합니다. 그렇기 때문에 중요한 문서가 나중에 인쇄될 수 있습니다. 이런 문제를 보완하기 위해 중요도가 높은 문서를 먼저 인쇄하는 프린터를 개발했습니다. 이 새롭게 개발한 프린터는 아래와 같은 방식으로 인쇄 작업을 수행합니다.
1. 인쇄 대기목록의 가장 앞에 있는 문서(J)를 대기목록에서 꺼냅니다.2. 나머지 인쇄 대기목록에서 J보다 중요도가 높은 문서가 한 개라도 존재하면 J를 대기목록의 가장 마지막에 넣습니다.3. 그렇지 않으면 J를 인쇄합니다.예를 들어, 4개의 문서(A, B, C, D)가 순서대로 인쇄 대기목록에 있고 중요도가 2 1 3 2 라면 C D A B 순으로 인쇄하게 됩니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]기능개발</title>
      <link>https://jyukki97.github.io/blog/2019-12-26-fdevelopment/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-26-fdevelopment/</guid>
      <description>https://programmers.co.kr
문제: 프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.
또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.
먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.</description>
    </item>
    
    <item>
      <title>[프로그래머스]다리를 지나는 트럭</title>
      <link>https://jyukki97.github.io/blog/2019-12-26-bridgetruck/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-26-bridgetruck/</guid>
      <description>https://programmers.co.kr
문제: 트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다. 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다. ※ 트럭이 다리에 완전히 오르지 않은 경우, 이 트럭의 무게는 고려하지 않습니다.
예를 들어, 길이가 2이고 10kg 무게를 견디는 다리가 있습니다. 무게가 [7, 4, 5, 6]kg인 트럭이 순서대로 최단 시간 안에 다리를 건너려면 다음과 같이 건너야 합니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]스킬트리</title>
      <link>https://jyukki97.github.io/blog/2019-12-26-skilltree/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-26-skilltree/</guid>
      <description>https://programmers.co.kr
문제: 선행 스킬이란 어떤 스킬을 배우기 전에 먼저 배워야 하는 스킬을 뜻합니다.
예를 들어 선행 스킬 순서가 스파크 → 라이트닝 볼트 → 썬더일때, 썬더를 배우려면 먼저 라이트닝 볼트를 배워야 하고, 라이트닝 볼트를 배우려면 먼저 스파크를 배워야 합니다.
위 순서에 없는 다른 스킬(힐링 등)은 순서에 상관없이 배울 수 있습니다. 따라서 스파크 → 힐링 → 라이트닝 볼트 → 썬더와 같은 스킬트리는 가능하지만, 썬더 → 스파크나 라이트닝 볼트 → 스파크 → 힐링 → 썬더와 같은 스킬트리는 불가능합니다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]자연수 뒤집어 배열로 만들기</title>
      <link>https://jyukki97.github.io/blog/2019-12-25-turnnnum/</link>
      <pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-25-turnnnum/</guid>
      <description>https://programmers.co.kr
풀이:  자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열을 리턴한다.  코드: 사용언어 : c++
#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdbool.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;int* solution(long long n) {// 리턴할 값은 메모리를 동적 할당해주세요. int* answer = (int*)malloc(sizeof(int)*12 + 1);int c = 0;while (n) {answer[c] = n % 10;n /= 10;c++;}return answer;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]자릿수 더하기</title>
      <link>https://jyukki97.github.io/blog/2019-12-24-sumpnum/</link>
      <pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-24-sumpnum/</guid>
      <description>https://programmers.co.kr
풀이:  자연수 n의 각 자릿수의 합을 구해서 리턴한다.  코드: 사용언어 : c++
#include &amp;lt;iostream&amp;gt;using namespace std;int solution(int n){int answer = 0;while (n != 0) {answer += n % 10;n /= 10;}return answer;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]이상한 문자 만들기</title>
      <link>https://jyukki97.github.io/blog/2019-12-23-strangestring/</link>
      <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-23-strangestring/</guid>
      <description>https://programmers.co.kr
문제: 문자열 s는 한 개 이상의 단어로 구성되어 있습니다. 각 단어는 하나 이상의 공백문자로 구분되어 있습니다. 각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하세요.
풀이:  문자열 전체의 짝/홀수 인덱스가 아니라 각 단어 기준이므로 주의한다. 공백문자가 하나가 아닐 수도 있으므로 주의한다. 공백문자를 기준으로 단어를 나누므로, 공백문자가 나왔을 경우 카운트를 초기화하는 식으로 문자열을 나눈다.  코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;string solution(string s) {int c = 0;for (int i = 0;i &amp;lt; s.</description>
    </item>
    
    <item>
      <title>[프로그래머스]두 정수 사이의 합</title>
      <link>https://jyukki97.github.io/blog/2019-12-22-sumnums/</link>
      <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-22-sumnums/</guid>
      <description>https://programmers.co.kr
풀이:  두 수 a, b 사이에 속한 모든 정수의 합을 리턴한다. a와 b는 -10,000,000 이상 10,000,000 이하인 정수 이므로 주의한다. a와 b의 대소관계가 정해져 있지 않으므로 절댓값을 이용한다.  코드: 사용언어 : c++
#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdbool.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;long long solution(int a, int b) {long long answer = ((long)a + (long)b) * (abs((long)b - (long)a) + 1) / 2;return answer;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]약수의 합</title>
      <link>https://jyukki97.github.io/blog/2019-12-22-sumdivisor/</link>
      <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-22-sumdivisor/</guid>
      <description>https://programmers.co.kr
풀이:  정수 n의 모든 약수의 합을 리턴한다.  코드: 사용언어 : c++
#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdbool.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;int solution(int n) {int answer = 0;for (int i = 1;i &amp;lt;= n;i++)if (n % i == 0)answer += i;return answer;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]가운데 글자 가져오기</title>
      <link>https://jyukki97.github.io/blog/2019-12-21-middlenum/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-21-middlenum/</guid>
      <description>https://programmers.co.kr
풀이:  문자열 s의 가운데 글자를 리턴한다. 만약 문자열 s의 길이가 짝수라면 가운데 두 글자를 반환한다  코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;string solution(string s) {string answer;if (s.length() % 2 == 0) {answer = s[s.length() / 2 - 1];answer += s[s.length() / 2];}else {answer = s[s.length() / 2];}return answer;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]시저 암호</title>
      <link>https://jyukki97.github.io/blog/2019-12-21-caesarcipher/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-21-caesarcipher/</guid>
      <description>https://programmers.co.kr
풀이:  문자열 s를 n만큼 밀어서 나온 다른 알파벳의 결과값을 리턴한다. 중간에 공백문자가 있을 수 있으니 주의한다. &amp;lsquo;z&#39;를 밀 경우 &amp;lsquo;A&#39;가 아니라 &amp;lsquo;a&#39;가 나와야 하므로 주의한다.  코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;string solution(string s, int n) {for (int i = 0;i &amp;lt; s.size();i++) {if (isalpha(s[i])) {if (s[i] + n &amp;gt; &amp;#39;z&amp;#39;) {s[i] = 96 + (s[i] + n) % &amp;#39;z&amp;#39;;}else if (s[i] &amp;lt;= &amp;#39;Z&amp;#39; &amp;amp;&amp;amp; s[i] + n &amp;gt; &amp;#39;Z&amp;#39;) {s[i] = 64 + (s[i] + n) % &amp;#39;Z&amp;#39;;}elses[i] += n;}}return s;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]나누어 떨어지는 숫자 배열</title>
      <link>https://jyukki97.github.io/blog/2019-12-20-dividednum/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-20-dividednum/</guid>
      <description>https://programmers.co.kr
풀이:  arr의 각 원소 중 divisor로 나누어 떨어지는 값을 오름차순으로 정렬한 배열을 리턴한다. 만약 배열의 원소가 없다면 -1을 리턴한다.  코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;vector&amp;lt;int&amp;gt; solution(vector&amp;lt;int&amp;gt; arr, int divisor) {vector&amp;lt;int&amp;gt; answer;for (int i : arr) {if (i % divisor == 0)answer.push_back(i);}sort(answer.begin(), answer.end());if(answer.size()==0)answer.push_back(-1);return answer;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]문자열을 정수로 바꾸기</title>
      <link>https://jyukki97.github.io/blog/2019-12-20-stoi/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-20-stoi/</guid>
      <description>https://programmers.co.kr
풀이:  문자열 s를 숫자로 변환한 결과를 리턴한다.  코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;int solution(string s) {int answer = stoi(s);return answer;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]같은 숫자는 싫어</title>
      <link>https://jyukki97.github.io/blog/2019-12-19-samesum/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-19-samesum/</guid>
      <description>https://programmers.co.kr
풀이:  배열 arr에서 연속적인 숫자는 하나를 제외하고 모두 삭제한 배열을 리턴한다.  코드: 사용언어 : c++
#include &amp;lt;vector&amp;gt;#include &amp;lt;iostream&amp;gt;using namespace std;vector&amp;lt;int&amp;gt; solution(vector&amp;lt;int&amp;gt; arr) {vector&amp;lt;int&amp;gt; answer;for (int i : arr) {if (answer.size() &amp;gt; 0) {if (answer.back() != i) {answer.push_back(i);}}else {answer.push_back(i);}}return answer;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]소수 찾기</title>
      <link>https://jyukki97.github.io/blog/2019-12-19-findpnum/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-19-findpnum/</guid>
      <description>https://programmers.co.kr
풀이:  2이상 n이하의 수들 중 소수의 갯수를 구하여 출력한다.  코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;math.h&amp;gt;using namespace std;int solution(int n) {vector&amp;lt;int&amp;gt; q = { 2 };for (int i = 3;i &amp;lt;= n;i++) {bool w = true;for (int t : q) {if (t &amp;gt; sqrt(i)) {break;}if (i % t == 0) {w = false;break;}}if (w == true) {q.</description>
    </item>
    
    <item>
      <title>[프로그래머스]수박수박수박수박수박수?</title>
      <link>https://jyukki97.github.io/blog/2019-12-19-subaksubak/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-19-subaksubak/</guid>
      <description>https://programmers.co.kr
풀이:  &amp;ldquo;수박수박수&amp;hellip;&amp;rdquo; 의 패턴을 유지하는 n만큼의 길이의 문자열을 리턴한다.  코드: 사용언어 : c++
#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdbool.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;string.h&amp;gt;char* solution(int n) {bool c = true;char a[] = &amp;#34;수&amp;#34;;char b[] = &amp;#34;박&amp;#34;;char* answer = (char*)malloc(sizeof(char)*3*n + 1);for (int i = 0;i &amp;lt; 3*n;i+=3) {if (c) {strcpy(answer + i, a);c = false;}else {strcpy(answer + i, b);c = true;}}return answer;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]서울에서 김서방 찾기</title>
      <link>https://jyukki97.github.io/blog/2019-12-18-findkim/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-18-findkim/</guid>
      <description>https://programmers.co.kr
풀이:  string 배열 seoul의 원소 중 &amp;ldquo;Kim&amp;quot;의 위치를 찾아 반환한다.  코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;string solution(vector&amp;lt;string&amp;gt; seoul) {for (int i = 0;i &amp;lt; seoul.size();i++)if (seoul[i] == &amp;#34;Kim&amp;#34;)return &amp;#34;김서방은 &amp;#34; + to_string(i) + &amp;#34;에 있다&amp;#34;;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]문자열 다루기 기본</title>
      <link>https://jyukki97.github.io/blog/2019-12-17-stringbase/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-17-stringbase/</guid>
      <description>https://programmers.co.kr
풀이:  문자열 s의 길이가 4 또는 6 이고, 숫자로만 구성되어있는지 확인 후 아니라면 false를 리턴  코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std;bool solution(string s) {bool answer = true;if (s.length() != 4 &amp;amp;&amp;amp; s.length() != 6) {answer = false;}else {for (int i = 0;i &amp;lt; s.length();i++) {if (s[i] &amp;gt; &amp;#39;9&amp;#39;) {answer = false;break;}}}return answer;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]문자열 내 p와 y의 개수</title>
      <link>https://jyukki97.github.io/blog/2019-12-16-py/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-16-py/</guid>
      <description>https://programmers.co.kr
풀이:  문자열 s의 모든 원소를 보고 p,P 이면 p의 갯수를 올리고, y,Y이면 y의 갯수를 올린다. p의 갯수와 y의 갯수가 같다면 true 다르다면 false 를 리턴한다.  코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;iostream&amp;gt;using namespace std;bool solution(string s){bool answer = true;int p = 0;int y = 0;for (int i = 0;i &amp;lt; s.length();i++) {if (s[i] == &amp;#39;p&amp;#39; || s[i] == &amp;#39;P&amp;#39;) {p++;}if (s[i] == &amp;#39;y&amp;#39; || s[i] == &amp;#39;Y&amp;#39;) {y++;}}if (p !</description>
    </item>
    
    <item>
      <title>[프로그래머스]체육복</title>
      <link>https://jyukki97.github.io/blog/2019-12-15-gymclothes/</link>
      <pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-15-gymclothes/</guid>
      <description>https://programmers.co.kr
풀이:   학생 전체 중 체육복을 잃어버린 학생과 체육복을 추가로 가져온 학생을 정리한다.(체육복을 추가로 가져온 학생들 중 체육복을 잃어버린 학생이 있을 수 있기 때문에)
  체육복이 없는 학생 중 양 옆에 여벌의 체육복을 가져온 학생이 있는경우 빌려입는다.
  전체 학생 중 체육복이 1개 이상 있는 학생들의 수를 리턴한다.
  주의 사항:   체육복을 추가로 가져온 학생들 중 체육복을 잃어버린 학생이 있을 수 있다.
  체육복을 추가로 가져오지 않았을 경우, 옆 사람에게 체육복을 추가로 얻어도 다른 사람에게 양도할 수 없다.</description>
    </item>
    
    <item>
      <title>[프로그래머스]k번째 수</title>
      <link>https://jyukki97.github.io/blog/2019-12-14-knum/</link>
      <pubDate>Sat, 14 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-14-knum/</guid>
      <description>https://programmers.co.kr
풀이:  array 배열의 commands[0]번째부터 commands[1]번째 까지 자른 후 정렬한다. 자른 배열의 commands[2] 번째 숫자를 출력한다. commands 배열의 길이만큼 반복한다.  코드: 사용언어 : c++
#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;vector&amp;lt;int&amp;gt; solution(vector&amp;lt;int&amp;gt; array, vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; commands) {vector&amp;lt;int&amp;gt; answer;for(int i=0;i&amp;lt;commands.size();i++){vector&amp;lt;int&amp;gt; a = array;sort(a.begin()+commands[i][0]-1,a.begin()+commands[i][1]);answer.push_back(a[commands[i][0] + commands[i][2] - 2]); }return answer;}</description>
    </item>
    
    <item>
      <title>[프로그래머스]2016년</title>
      <link>https://jyukki97.github.io/blog/2019-12-13-2016%EB%85%84/</link>
      <pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jyukki97.github.io/blog/2019-12-13-2016%EB%85%84/</guid>
      <description>https://programmers.co.kr
풀이:  매 달 날짜를 계산하여 원하는 날짜의 요일을 구한다,  주의사항:  2016년은 윤년이다. 1월 1일은 금요일이다.  코드: 사용언어 : c++
#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdbool.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;char* solution(int a, int b) {// 리턴할 값은 메모리를 동적 할당해주세요. int m[13] = { 0,31,29,31,30,31,30,31,31,30,31,30,31 };const char *d[8]= { &amp;#34;THU&amp;#34;,&amp;#34;FRI&amp;#34;,&amp;#34;SAT&amp;#34;,&amp;#34;SUN&amp;#34;,&amp;#34;MON&amp;#34;,&amp;#34;TUE&amp;#34;,&amp;#34;WED&amp;#34; };for(int i = 1;i &amp;lt; a;i++) {b += m[i];}b %= 7;return d[b];}</description>
    </item>
    
  </channel>
</rss>